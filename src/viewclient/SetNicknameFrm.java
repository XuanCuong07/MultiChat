/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viewclient;

import coreclient.ActionType;
import coreclient.ClientManager;
import coreclient.Result;
import coreclient.ResultCode;
import dao.InsertDAO;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import java.io.UnsupportedEncodingException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author BVCN 88
 */
public class SetNicknameFrm extends javax.swing.JFrame implements Observer{

    /**
     * Creates new form SetNicknameFrm
     */
    ClientManager mClientManager;
    public SetNicknameFrm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNickName = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtNickName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNickNameKeyTyped(evt);
            }
        });

        btnLogin.setText("OK");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel1.setText("Nickname");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 255));
        jLabel3.setText("Messenger");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNickName)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogin)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNickName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addComponent(btnLogin)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNickNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNickNameKeyTyped
        // TODO add your handling code here:
        if(evt.getKeyChar() == ';')
        evt.consume();
    }//GEN-LAST:event_txtNickNameKeyTyped

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String nickName = txtNickName.getText().trim();
        if(nickName.length()==0)
        {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập nick name", "Chưa nhập nick name", JOptionPane.WARNING_MESSAGE);
            txtNickName.requestFocus();
            return;
        }
        if(mClientManager!=null)
        {
            mClientManager.Dispose();
        }
        mClientManager = new ClientManager(this);
        if(mClientManager.StartConnect())
        {
            try
            {
                btnLogin.setEnabled(false);
                mClientManager.Login(nickName);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(SetNicknameFrm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        Connection com=null;
        PreparedStatement preparedStatement=null;
        try {
            Manager s= new Manager();
            Date date= new Date();
            SimpleDateFormat sdf=new SimpleDateFormat("dd:MM:yyyy HH:mm:ss");
            String time=sdf.format(date.getTime());
            com=DriverManager.getConnection("jdbc:mysql://localhost:3306/chatappuser","root", "");
            String sql="insert into lichsu(user,ngay)"+"values(?,?)";
            String id="123";
            String ngay="123";
            preparedStatement=com.prepareStatement(sql);
            preparedStatement.setString(1, nickName);
            preparedStatement.setString(2, time);
            preparedStatement.execute();
        } catch (SQLException ex) {
            Logger.getLogger(InsertDAO.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            if(preparedStatement!=null){
                try {
                    preparedStatement.close();
                } catch (SQLException ex) {
                    Logger.getLogger(InsertDAO.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(com!=null){
                try {
                    com.close();
                } catch (SQLException ex) {
                    Logger.getLogger(InsertDAO.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(mClientManager!=null)
            mClientManager.Dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtNickName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        btnLogin.setEnabled(true);
        Result result = (Result)arg;
        if(result.mResultCode.equals(ResultCode.ERROR))
        {
            JOptionPane.showMessageDialog(null, result.mContent, "Thất bại", JOptionPane.ERROR_MESSAGE);
        }else if(result.mActionType.equals(ActionType.LOGIN))
        {
            mClientManager.mNickname = txtNickName.getText().trim();
            mClientManager.deleteObserver(this);   //xóa obs login đi để tránh login nhận thông báo trong khi ko hoạt động
            HomeFrm homeFrm = new HomeFrm(this, mClientManager);
            homeFrm.setLocationRelativeTo(this);
            homeFrm.setVisible(true);
            this.setVisible(false);
        }
    }
}
